@model MvcMovie.Models.ReviewIndex

@{
    ViewData["Title"] = "Index";
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<style>

    body {
        background-color: #0b1622;
    }

    body * {
        color: #9fadbd;
    }
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        align-items: center;
    }

    .modal-content {
        background-color: #151f2e;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 40%; /* Could be % or px */
        height: 50%;
        position: relative; /* To position the close button */
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    }
</style>

<h2>Reviews</h2>
@* <ul>
    @foreach (var review in Model.Reviews)
    {
        <li>@review.Score - @review.ReviewDescription</li>
    }
</ul> *@

<div id="myModal" class="modal" style = "display: none;">
  <div class="modal-content">
    <span class="close">&times;</span>   
        <h2>Add New Review</h2>
        <form asp-action="Create" method="post" id = "myForm">
            <div class="form-group">
                <label>Review score</label>
                <input type ="number" class="form-control" name="Score" id ="Score" />

                <label>Description</label>
                <textarea class="form-control" name="ReviewDescription" id="ReviewDescription"></textarea> 

                <label>Status</label>
                <input type ="string" class="form-control" name="status" id ="status" />
            </div>


            <button type="submit" id ="submitButton" class="btn btn-primary">Submit</button>
        </form>
  </div>
</div> 

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script>
    $(document).ready(function() {
        $("#submitButton").click(function() {
            var formData = $("#myForm").serialize();

            $.ajax({
                type: "POST",
                url: "/TestController/Create",
                data: formData,
                success: function(response) {
                    // Handle the response from the server
                    console.log(response);
                    // Update the DOM or trigger other actions as needed
                },
                error: function(error) {
                    // Handle errors
                    console.error(error);
                }
            });
        });
    });
</script>

<h1>Test</h1>
<button id="openModalButton" style= 'background-color:#f8c735 ; color: #f0f0f0'>Open Modal</button>


<script>
// Get the modal
var modal = document.getElementById("myModal");

// Get the button that opens the modal
var btn = document.getElementById("openModalButton");   


// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal 
btn.onclick = function() {
  modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
  modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
}

function displayFormData(){
    console.log("Hello")

    console.log(document.getElementById("NewReview_Score"));
    console.log(document.getElementById("NewReview_ReviewDescription"));
    console.log(document.getElementById("NewReview_status"));

}
</script>

